version: '3.8'
name: template01
services:

  inventory:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory-service:/code  # Sync local development directory with the container
    depends_on:
      - inventory_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@inventory_db:5432/inventorydb
    ports:
      - "9001:8000"  # Expose container port 8000 to host port 9001

  notification:
    build:
      context: ./notification-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./notification-service:/code  # Sync local development directory with the container
    depends_on:
      - notification_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@notification_db:5432/notificationdb
    ports:
      - "9002:8000"  # Expose container port 8000 to host port 9002  

  order:
    build:
      context: ./order-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./order-service:/code  # Sync local development directory with the container
    depends_on:
      - order_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@order_db:5432/orderdb
    ports:
      - "9003:8000"  # Expose container port 8000 to host port 9003  

  payment:
    build:
      context: ./payment-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./payment-service:/code  # Sync local development directory with the container
    depends_on:
      - payment_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@payment_db:5432/paymentdb
    ports:
      - "9004:8000"  # Expose container port 8000 to host port 9004  

  product:
    build:
      context: ./product-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./product-service:/code  # Sync local development directory with the container
    depends_on:
      - product_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@product_db:5432/productdb
    ports:
      - "9005:8000"  # Expose container port 8000 to host port 9005 

  user:
    build:
      context: ./user-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./user-service:/code  # Sync local development directory with the container
    depends_on:
      - user_db
      - broker
    environment:
      DATABASE_URL: postgresql://zain:password@user_db:5432/userdb
    ports:
      - "9006:8000"  # Expose container port 8000 to host port 9006

  inventory_db:
    image: postgres:latest
    restart: always
    container_name: InventoryDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventorydb
    ports:
      - '5433:5432'
    volumes:
      - inventory_db:/var/lib/postgresql/data

  notification_db:
    image: postgres:latest
    restart: always
    container_name: NotificationDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notificationdb
    ports:
      - '5434:5432'
    volumes:
      - notification_db:/var/lib/postgresql/data

  order_db:
    image: postgres:latest
    restart: always
    container_name: OrderDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderdb
    ports:
      - '5435:5432'
    volumes:
      - order_db:/var/lib/postgresql/data

  payment_db:
    image: postgres:latest
    restart: always
    container_name: PaymentDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: paymentdb
    ports:
      - '5436:5432'
    volumes:
      - payment_db:/var/lib/postgresql/data

  product_db:
    image: postgres:latest
    restart: always
    container_name: ProductDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - '5437:5432'
    volumes:
      - product_db:/var/lib/postgresql/data

  user_db:
    image: postgres:latest
    restart: always
    container_name: UserDB
    environment:
      POSTGRES_USER: zain
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    ports:
      - '5438:5432'
    volumes:
      - user_db:/var/lib/postgresql/data

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

volumes:
  inventory_db:
    driver: local
  notification_db:
    driver: local
  order_db:
    driver: local
  payment_db:
    driver: local
  product_db:
    driver: local
  user_db:
    driver: local

networks:
  default:
    driver: bridge
